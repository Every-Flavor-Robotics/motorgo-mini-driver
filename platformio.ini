; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html


[env]
platform = platformio/espressif32@^6.4.0
board = motorgo-mini-v2.0
framework = arduino
lib_archive = no
monitor_speed = 115200
build_src_filter = +<*.cpp>
lib_deps =
    Preferences
	https://github.com/Every-Flavor-Robotics/Arduino-FOC.git#dev-current-sense-v-2-3-2
	https://github.com/Every-Flavor-Robotics/Arduino-FOC-drivers.git
	https://github.com/Every-Flavor-Robotics/esp-options.git
    https://github.com/arduino-libraries/Arduino_JSON.git
    https://github.com/Every-Flavor-Robotics/esp-wifi-config.git#feature/configurable-manager
    Wire
    SPI
    FS

[env:test_current_sense]
build_src_filter = +<motorgo_mini.cpp>
                   +<current_sense.cpp>
                   +<../examples/spin_two_motors.cpp>


[env:test_leader]
build_src_filter = +<leader.cpp>
                   +<motorgo_group_leader.cpp>
                   +<esp_now_comms.cpp>
                   +<motorgo_comms_types.cpp>

[env:test_follower]
build_src_filter = +<follower.cpp>
                   +<motorgo_groupie.cpp>
                   +<esp_now_comms.cpp>
                   +<motorgo_comms_types.cpp>

[env:tune_contollers]
build_src_filter = ${env.build_src_filter} +<../examples/tune_controllers.cpp>

lib_deps =
    ${env.lib_deps}
    FS
    https://github.com/Every-Flavor-Robotics/esp-wifi-config.git#feature/configurable-manager

[env:spin_two_motors]
build_src_filter = ${env.build_src_filter} +<../examples/spin_two_motors.cpp>

[env:haptics]
build_src_filter = ${env.build_src_filter} +<../examples/haptics_demo.cpp>


[env:balance_bot]
build_src_filter = ${env.build_src_filter} +<../examples/balance_bot.cpp>

lib_deps =
    ${env.lib_deps}
    https://github.com/Every-Flavor-Robotics/mpu6050-driver.git

[env:calibrate_motors]
build_src_filter = ${env.build_src_filter} +<../examples/calibrate_motors.cpp>

[env:read_encoders]
build_src_filter = ${env.build_src_filter} +<../examples/read_encoders.cpp>


